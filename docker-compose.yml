services:
  nginx:
    image: nginx:stable-alpine
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html # Mount built React app
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    volumes:
      - ./backend:/var/www/backend
      - ./backend/storage:/var/www/backend/storage
    restart: unless-stopped

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: react-frontend
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   networks:
  #     - app-network

  # MySQL service
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
